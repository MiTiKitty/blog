server.port=18090

blog.name=itcat's Blog
# Blog名称为Naccl's Blog
# 生产环境需要修改为服务器ip或域名
# 后端服务URL https://api.naccl.top/blog
blog.api=http://localhost:${server.port}
# 后台管理URL https://admin.naccl.top
blog.cms=http://localhost:18080
# 前台界面URL https://naccl.top
blog.view=http://localhost:18081

# 连接MySQL数据库的配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://116.62.191.135:3306/cat_n_blog?serverTimezone=UTC&useUnicode=true&useSSL=false&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123123asd

# Redis的配置
spring.redis.host=116.62.191.135
spring.redis.port=6379
spring.redis.database=0
spring.redis.timeout=10000ms

# Mybatis的配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

# 日志的配置
logging.level.root=info
logging.level.top.naccl=debug
logging.file=blog-api/log/blog-dev

# token过期时间为3天
# 生产环境必须修改此配置，否则无法保证token安全性
token.expireTime=259200000
# 生产环境应修改此配置，否则无法保证token安全性
token.secretKey=abcdefghijklmnopqrstuvwxyz

# 博主接收评论提醒的方式: Telegram=tg 邮箱=mail (访客评论提醒固定为邮箱方式)
comment.notify.channel=mail
# 新评论是不是默认公开
comment.default-open=true

# 如果选择的是邮箱提醒方式，下面的信息必须更改为自己邮箱的配置，其他邮件服务商配置参考关键字"spring mail 服务器"
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=3364187323@qq.com
spring.mail.password=tcmtqukbanvfdbad

# 如果是选择了使用邮箱提醒的方式，以下无需修改
tg.bot.api=https://api.telegram.org/bot
# bot的token，可以从 @BotFather处获取
tg.bot.token=1234567890:qwertyuiopasdfghjklzxcvbnm
# 自己账号和bot的聊天会话id
tg.bot.chat-id=1234567890
# 是否使用代理
tg.bot.use-proxy=false
# 是否使用反向代理
tg.bot.use-reverse-proxy=true
# 反向代理URL，请自行搭建，示为API随时可能关闭
tg.bot.reverse-proxy-url=https://tg-api-open.naccl.workers.dev

# 代理配置，如不使用无需修改（当前用于发送Telegram请求）
http.proxy.server.host=127.0.0.1
http.proxy.server.port=7890
http.proxy.server.timeout=10000

# 评论中QQ头像存储方式: 本地:local GitHub:github 又拍云:upyun
upload.channel=local

# 静态文件上传访问路径 Windows环境例为: C:/Users/nblog/Desktop/upload/ Linux环境例为：/home/nblog/upload/
upload.file.path=/Users/naccl/Desktop/upload/
# 静态文件上传访问路径（/image/**是一个前缀）
upload.file.access-path=/image/**
upload.file.resources-locations=file:${upload.file.path}

# 如果选择其他上传方式，以下可以不用修改
# GitHub token 教程见 https://naccl.github.io/PictureHosting/#/pictureHosting/help
upload.github.token=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
upload.github.username=Naccl
# 需要用作图床的GitHub仓库名
upload.github.repos=test
# 上传到仓库的路径，开头需要"/" 结尾不要"/"
upload.github.repos-path=/comment/avatar

# 又拍云存储空间名称，帮助文档见 https://help.upyun.com/knowledge-base/quick_start/
upload.upyun.bucket-name=nblog
# 操作员名称
upload.upyun.username=naccl
# 操作员密码
upload.upyun.password=xxxxxxxxxxxxxxxxxxxxxxxxxxxx
# 存储路径
upload.upyun.path=/comment/avatar
# CDN访问域名
upload.upyun.domain=https://cdn.example.com